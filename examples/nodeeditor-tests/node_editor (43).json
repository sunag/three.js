{"objects":{"21":{"x":352,"y":197,"elements":[22,24],"autoResize":true,"layoutJSON":"{\"name\":\"3D Model\",\"width\":300,\"outputType\":\"Object3D\"}","id":21,"type":"ScriptableEditor"},"22":{"inputLength":1,"outputLength":1,"height":null,"title":"3D Model","id":22,"type":"TitleElement"},"24":{"height":563,"source":"// Addition Node Example\n// THREE and TSL (Three.js Shading Language) namespaces are available!\n// Enjoy! :)\n\n// layout must be the first variable.\n\nlayout = {\n    name: \"3D Model\",\n    width: 300,\n\toutputType: 'Object3D'\n};\n\n// main code must be in the output function.\n\nconst group = resources.get( 'fbx', () => new THREE.Group() );\n\nasync function init() {\n\n    const { FBXLoader } = await import( 'three/addons/loaders/FBXLoader.js' );\n\n    const loaderFBX = new FBXLoader();\n    const fbx = await loaderFBX.loadAsync( 'models/fbx/stanford-bunny.fbx' );\n\n    const model = fbx.children[ 0 ];\n    model.position.set( 0, 0, .1 );\n    model.scale.setScalar( .01 );\n\n    group.add( model );\n\n}\n\noutput = () => {\n\n    console.log( group.getObjectByName( 'Stanford_Bunny' ) );\n\n\treturn group;\n\n};\n\n// other important functions.\n\n// dispose = () => {};\n","id":24,"type":"CodeEditorElement"}},"nodes":[21],"id":2,"type":"Canvas"}