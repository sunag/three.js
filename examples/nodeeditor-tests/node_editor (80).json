{"objects":{"273":{"x":-135,"y":-34,"elements":[274,352,276],"autoResize":true,"layoutJSON":"{\"name\":\"3D Model\",\"width\":300,\"outputType\":\"Object3D\",\"elements\":[{\"name\":\"File\",\"inputType\":\"URL\"}]}","id":273,"type":"ScriptableEditor"},"274":{"inputLength":1,"outputLength":1,"height":null,"title":"3D Model","id":274,"type":"TitleElement"},"276":{"height":666,"source":"// Addition Node Example\n// THREE and TSL (Three.js Shading Language) namespaces are available!\n// Enjoy! :)\n\n// layout must be the first variable.\n\nlayout = {\n    name: \"3D Model\",\n    width: 300,\n\toutputType: 'Object3D',\n    elements: [\n        { name: 'File', inputType: 'URL' }\n    ]\n};\n\n// main code must be in the output function.\n\nfunction loadFile() {\n\n    const url = parameters.get( 'File' ).value;\n    const fileScene = new THREE.Group();\n\n    async function load() {\n\n        const { GLTFLoader } = await import( 'three/addons/loaders/GLTFLoader.js' );\n\n        const loader = new GLTFLoader();\n        const glTF = await loader.loadAsync( url );\n\n        const model = glTF.scene.children[ 0 ];\n        \n        fileScene.add( model );\n\n        console.log( \"MODEL LOADED\" );\n\n        refresh();\n\n    }\n\n    load();\n\n    return fileScene;\n\n}\n\nfunction output() {\n\n    const url = parameters.get( 'File' );\n\n    let group = null;\n\n    if ( url && url.value ) {\n\n        group = local.get( url.value, loadFile );\n\n    } else {\n\n        group = new THREE.Group();\n\n    }\n\n    group.scale.setScalar( 3 );\nconsole.log( 'OUTPUT >>', group, url );\n\treturn group;\n\n};\n\n// other important functions.\n\n// dispose = () => {};\n","id":276,"type":"CodeEditorElement"},"279":{"x":1186,"y":336,"elements":[280,353,354,356,282],"autoResize":true,"layoutJSON":"{\"name\":\"Replace Material\",\"width\":300,\"outputType\":\"Material\",\"elements\":[{\"name\":\"C\",\"inputType\":\"Object3D\"},{\"name\":\"Name\",\"inputType\":\"string\"},{\"name\":\"Mat\",\"inputType\":\"Material\"}]}","id":279,"type":"ScriptableEditor"},"280":{"inputLength":1,"outputLength":1,"height":null,"title":"Replace Material","id":280,"type":"TitleElement"},"282":{"height":484,"source":"\nlayout = {\n    name: \"Replace Material\",\n    width: 300,\n\toutputType: 'Material',\n    elements: [\n        { name: 'C', inputType: 'Object3D' },\n        { name: 'Name', inputType: 'string' },\n        { name: 'Mat', inputType: 'Material' }\n    ]\n};\n\nfunction output() {\n\n    const materials = local.get( 'materials', () => new WeakMap() );\n    const group = parameters.get( 'C' );\n    const material = parameters.get( 'Mat' );\n    const name = parameters.get( 'Name' ).value;\n    const mesh = group ? group.getObjectByName( name ) : null;\n\n    if ( local.has( 'material' ) ) {\n\n        const { mesh, material } = local.get( 'material' );\n\n        mesh.material = material;\n\n        local.delete( 'material' );\n\n    }\n\n   if ( mesh && material ) {\n\n        local.set( 'material', {\n            mesh,\n            material: mesh.material\n        } );\n\n        mesh.material = material;\n\n   }\n\n}","id":282,"type":"CodeEditorElement"},"285":{"x":788,"y":510,"elements":[286,288,289,290],"autoResize":false,"id":285,"type":"BasicMaterialEditor"},"286":{"outputLength":1,"height":null,"title":"Basic Material","id":286,"type":"TitleElement"},"288":{"inputLength":3,"inputs":[291],"links":[302],"height":null,"id":288,"type":"LabelElement"},"289":{"inputLength":1,"inputs":[292],"height":null,"id":289,"type":"LabelElement"},"290":{"inputLength":3,"height":null,"id":290,"type":"LabelElement"},"291":{"value":16777215,"id":291,"type":"ColorInput"},"292":{"min":0,"max":1,"value":1,"id":292,"type":"SliderInput"},"301":{"x":773,"y":279,"elements":[302,304],"autoResize":false,"id":301,"type":"CheckerEditor"},"302":{"outputLength":1,"height":null,"title":"Checker","id":302,"type":"TitleElement"},"304":{"inputLength":2,"links":[316],"height":null,"id":304,"type":"LabelElement"},"307":{"x":425,"y":90,"elements":[308,311],"autoResize":false,"id":307,"type":"UVEditor"},"308":{"outputLength":2,"height":null,"title":"UV","id":308,"type":"TitleElement"},"310":{"options":["1","2"],"value":"0","id":310,"type":"SelectInput"},"311":{"inputs":[310],"height":null,"id":311,"type":"LabelElement"},"315":{"x":499,"y":320,"elements":[316,323,319,320],"autoResize":false,"id":315,"type":"OperatorEditor"},"316":{"outputLength":1,"height":null,"title":"Operator","id":316,"type":"TitleElement"},"318":{"options":[{"name":"Addition ( + )","value":"+"},{"name":"Subtraction ( - )","value":"-"},{"name":"Multiplication ( * )","value":"*"},{"name":"Division ( / )","value":"/"}],"value":"*","id":318,"type":"SelectInput"},"319":{"inputLength":3,"inputs":[321],"links":[308],"height":null,"id":319,"type":"LabelElement"},"320":{"inputLength":3,"inputs":[322],"height":null,"id":320,"type":"LabelElement"},"321":{"value":0,"id":321,"type":"NumberInput"},"322":{"value":10,"id":322,"type":"NumberInput"},"323":{"inputs":[318],"height":null,"id":323,"type":"Element"},"331":{"x":-772,"y":246,"elements":[332,335],"autoResize":false,"id":331,"type":"StringEditor"},"332":{"outputLength":1,"height":null,"title":"String","id":332,"type":"TitleElement"},"334":{"value":"models/gltf/DamagedHelmet/glTF/DamagedHelmet.gltf","id":334,"type":"StringInput"},"335":{"inputs":[334],"height":null,"id":335,"type":"Element"},"339":{"x":729,"y":-6,"elements":[340,343],"autoResize":false,"id":339,"type":"StringEditor"},"340":{"outputLength":1,"height":null,"title":"String","id":340,"type":"TitleElement"},"342":{"value":"asdf adf mnb","id":342,"type":"StringInput"},"343":{"inputs":[342],"height":null,"id":343,"type":"Element"},"352":{"inputLength":1,"links":[332],"height":null,"id":352,"type":"LabelElement"},"353":{"inputLength":1,"links":[274],"height":null,"id":353,"type":"LabelElement"},"354":{"inputLength":1,"inputs":[355],"height":null,"id":354,"type":"LabelElement"},"355":{"value":"node_damagedHelmet_-6514","id":355,"type":"StringInput"},"356":{"inputLength":1,"links":[286],"height":null,"id":356,"type":"LabelElement"}},"nodes":[273,279,285,301,307,315,331,339],"id":2,"type":"Canvas"}